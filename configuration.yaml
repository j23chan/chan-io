homeassistant:
  # Name of the location where Home Assistant is running
  name: Home

  # Location required to calculate the time the sun rises and sets
  latitude: !secret my_latitude
  longitude: !secret my_longitude

  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: !secret my_elevation

  # metric for Metric, imperial for Imperial
  unit_system: metric

  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Toronto

  # Customization file
  customize: !include customize.yaml

# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
http:
  ssl_certificate: /home/homeassistant/.homeassistant/dehydrated/certs/chanio.duckdns.org/fullchain.pem
  ssl_key: /home/homeassistant/.homeassistant/dehydrated/certs/chanio.duckdns.org/privkey.pem
  base_url: !secret http_url

# Discover some devices automatically
discovery:

# Ecobee
ecobee:
  api_key: !secret ecobee_api_key

# Mosquitto MQTT Broker
mqtt:
  broker: 192.168.1.160
  port: 1883
  username: !secret mqtt_username
  password: !secret mqtt_password
  client_id: chanio

# Sensors
binary_sensor:
  - platform: mqtt
    name: "OpenMQTTGateway"
    state_topic: "home/OpenMQTTGateway/LWT"
    payload_on: "online"
    payload_off: "offline"
    device_class: "connectivity"

sensor:
  - platform: time_date
    display_options:
      - 'date_time'
      - 'time'
  - platform: template
    sensors:
      dark_outside:
        value_template: "{{ is_state('sun.sun', 'below_horizon') }}"
        friendly_name: "Dark Outside"

# Garage Door
cover:
  - platform: mqtt
    name: garage_door
    state_topic: "garage/door"
    command_topic: "garage/button"
    payload_open: "OPEN"
    payload_close: "OPEN"
    payload_stop: "OPEN"
    state_open: "OPENED"
    state_closed: "CLOSED"
    optimistic: false
    retain: false
    value_template: '{{ value }}'

# Text to speech
tts:
  - platform: google_translate
    service_name: google_say

ifttt:
  key: !secret ifttt_api_key

# Unifi Camera
camera:
  - platform: uvc
    nvr: 192.168.1.160
    key: !secret unifi_api_key
    password: !secret unifi_camera_password

# Unifi Wireless AC
device_tracker:
  - platform: unifi
    host: 192.168.1.160
    username: !secret unifi_controller_username
    password: !secret unifi_controller_password
    verify_ssl: false
    detection_time: 60
    ssid_filter:
      - 'beyoootch'
      - 'beyoootch_5g'
    monitored_conditions:
      - last_seen
      - essid
      - ip

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

tplink:
  switch:
    - host: 192.168.1.161
    - host: 192.168.1.162

switch:
  - platform: mqtt
    name: "rf_outlet_1"
    state_topic: "home/OpenMQTTGateway/433toMQTT" # defined by subjectGTWRFtoMQTT in User_config.h
    command_topic: "home/OpenMQTTGateway/commands/MQTTto433/PLSL_183/433_1"
    payload_on: "349491"
    payload_off: "349500"
    optimistic: false
    retain: true
  - platform: mqtt
    name: "rf_outlet_2"
    state_topic: "home/OpenMQTTGateway/433toMQTT" # defined by subjectGTWRFtoMQTT in User_config.h
    command_topic: "home/OpenMQTTGateway/commands/MQTTto433/PLSL_183/433_1"
    payload_on: "349635"
    payload_off: "349644"
    optimistic: false
    retain: true
  - platform: mqtt
    name: "rf_outlet_3"
    state_topic: "home/OpenMQTTGateway/433toMQTT" # defined by subjectGTWRFtoMQTT in User_config.h
    command_topic: "home/OpenMQTTGateway/commands/MQTTto433/PLSL_183/433_1"
    payload_on: "349955"
    payload_off: "349964"
    optimistic: false
    retain: true
  - platform: mqtt
    name: "rf_outlet_4"
    state_topic: "home/OpenMQTTGateway/433toMQTT" # defined by subjectGTWRFtoMQTT in User_config.h
    command_topic: "home/OpenMQTTGateway/commands/MQTTto433/PLSL_183/433_1"
    payload_on: "351491"
    payload_off: "351500"
    optimistic: false
    retain: true
  - platform: mqtt
    name: "rf_outlet_5"
    state_topic: "home/OpenMQTTGateway/433toMQTT" # defined by subjectGTWRFtoMQTT in User_config.h
    command_topic: "home/OpenMQTTGateway/commands/MQTTto433/PLSL_183/433_1"
    payload_on: "357635"
    payload_off: "357644"
    optimistic: false
    retain: true

# Ceiling fan lights
input_boolean:
  master_bedroom_light:
  carter_bedroom_light:
  libby_bedroom_light:
  living_room_light:
  stairway_light:
  vacation_mode:

# Ceiling fan speeds
input_select:
  master_bedroom_fan_speed:
    options:
      - 'Off'
      - 'Low'
      - 'Medium'
      - 'High'
  carter_bedroom_fan_speed:
    options:
      - 'Off'
      - 'Low'
      - 'Medium'
      - 'High'
  libby_bedroom_fan_speed:
    options:
      - 'Off'
      - 'Low'
      - 'Medium'
      - 'High'
  living_room_fan_speed:
    options:
      - 'Off'
      - 'Low'
      - 'Medium'
      - 'High'
  stairway_fan_speed:
    options:
      - 'Off'
      - 'Low'
      - 'Medium'
      - 'High'

# RGB strip lights
light:
  - platform: mqtt
    name: "RGB1"
    state_topic: "stat/sonoffrgb1/RESULT"
    command_topic: "cmnd/sonoffrgb1/POWER"
    state_value_template: "{{ value_json.POWER }}"
    brightness_state_topic: "stat/sonoffrgb1/RESULT"
    brightness_command_topic: "cmnd/sonoffrgb1/Dimmer"
    brightness_scale: 100
    brightness_value_template: "{{ value_json.Dimmer }}"
    white_value_state_topic: "stat/sonoffrgb1/RESULT"
    white_value_command_topic: "cmnd/sonoffrgb1/Channel4"
    white_value_scale: 100
    white_value_template: "{{ value_json.Channel[3] }}"
    rgb_state_topic: "stat/sonoffrgb1/RESULT"
    rgb_command_topic: "cmnd/sonoffrgb1/Color"
    rgb_command_template: "{{ '%02x%02x%02x' | format(red, green, blue)}}"
    rgb_value_template: "{{(value_json.Channel[0]*2.55)|int}},{{(value_json.Channel[1]*2.55)|int}},{{(value_json.Channel[2]*2.55)|int}}"
    effect_state_topic: "stat/sonoffrgb1/RESULT"
    effect_command_topic: "cmnd/sonoffrgb1/Scheme"
    effect_value_template: "{{ value_json.Scheme }}"
    effect_list:
      - 0
      - 1
      - 2
      - 3
      - 4
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    optimistic: false
    retain: true
    
  - platform: mqtt
    name: "RGB2"
    state_topic: "stat/sonoffrgb2/RESULT"
    command_topic: "cmnd/sonoffrgb2/POWER"
    state_value_template: "{{ value_json.POWER }}"
    brightness_state_topic: "stat/sonoffrgb2/RESULT"
    brightness_command_topic: "cmnd/sonoffrgb2/Dimmer"
    brightness_scale: 100
    brightness_value_template: "{{ value_json.Dimmer }}"
    white_value_state_topic: "stat/sonoffrgb2/RESULT"
    white_value_command_topic: "cmnd/sonoffrgb2/Channel4"
    white_value_scale: 100
    white_value_template: "{{ value_json.Channel[3] }}"
    rgb_state_topic: "stat/sonoffrgb2/RESULT"
    rgb_command_topic: "cmnd/sonoffrgb2/Color"
    rgb_command_template: "{{ '%02x%02x%02x' | format(red, green, blue)}}"
    rgb_value_template: "{{(value_json.Channel[0]*2.55)|int}},{{(value_json.Channel[1]*2.55)|int}},{{(value_json.Channel[2]*2.55)|int}}"
    effect_state_topic: "stat/sonoffrgb2/RESULT"
    effect_command_topic: "cmnd/sonoffrgb2/Scheme"
    effect_value_template: "{{ value_json.Scheme }}"
    effect_list:
      - 0
      - 1
      - 2
      - 3
      - 4
    payload_available: "Online"
    payload_not_available: "Offline"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    optimistic: false
    retain: true

# CPU temperature
sensor:
    - platform: command_line
      name: CPU Temperature
      command: "cat /sys/class/thermal/thermal_zone0/temp"
      unit_of_measurement: "C"
      value_template: '{{ (value | multiply(0.001)) | round(1) }}'
